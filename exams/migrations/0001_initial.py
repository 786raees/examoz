# Generated by Django 3.2 on 2022-06-06 21:08

import ckeditor.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('introduction', ckeditor.fields.RichTextField(blank=True, help_text='<br>This text is displayed on the top of the test.', null=True)),
                ('randomize_question', models.BooleanField(default=False, verbose_name='Randomize the order of the question')),
                ('conclusion_text', ckeditor.fields.RichTextField(blank=True, help_text='<br>This text is displayed after the test is submited.', null=True)),
                ('show_custom_message', models.BooleanField(verbose_name='Show custom message if student passed or failed')),
                ('passing_score', models.PositiveSmallIntegerField(verbose_name='What is the passing score')),
                ('pass_message', ckeditor.fields.RichTextField(blank=True, help_text='<br>If the student passes this message is displayed.', null=True)),
                ('fail_message', ckeditor.fields.RichTextField(blank=True, help_text='<br>If the student fails this message is displayed.', null=True)),
                ('display_score', models.BooleanField(default=False, verbose_name='Score')),
                ('display_test_outline', models.BooleanField(default=False, verbose_name='test outline')),
                ('display_indicate', models.BooleanField(default=False, verbose_name='Indicate if the answer is correct or not')),
                ('display_correct_answer', models.BooleanField(default=False, verbose_name='Display correct answer')),
                ('display_explanation', models.BooleanField(default=False, verbose_name='explanation')),
                ('anyone', models.BooleanField(default=False, verbose_name='Anyone')),
                ('anyone_with_password', models.BooleanField(default=False, verbose_name='Anyone who enter a password of your choice')),
                ('anyone_with_unique_identifier', models.BooleanField(default=False, verbose_name='Anyone who enter a unique identifier from a list that I specify')),
                ('anyone_with_unique_email', models.BooleanField(default=False, verbose_name='Anyone who enter an E-mail address from a list that I specify')),
                ('student_identifier', models.CharField(default='please enter your school email address', help_text='What should test takers enter to identify themselves?', max_length=100, verbose_name='student_identifier')),
                ('notifications', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', help_text='Do you want to receive an email whenever someone finishes this exam?', max_length=3)),
                ('status', models.CharField(max_length=50, verbose_name='status')),
                ('question', models.CharField(max_length=50, verbose_name='question')),
                ('no_of_score', models.CharField(max_length=50, verbose_name='no of score')),
                ('avg_score', models.CharField(max_length=50, verbose_name='avg score')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_updated', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Exams',
            },
        ),
    ]
